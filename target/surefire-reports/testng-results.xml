<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="2" total="5" passed="1" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[This is Before method...]]>
    </line>
    <line>
      <![CDATA[This is Before method...]]>
    </line>
    <line>
      <![CDATA[This is Before method...]]>
    </line>
  </reporter-output>
  <suite started-at="2024-04-04T18:06:58 GMT-04:00" name="Suite" finished-at="2024-04-04T18:07:57 GMT-04:00" duration-ms="58519">
    <groups>
    </groups>
    <test started-at="2024-04-04T18:06:58 GMT-04:00" name="Test" finished-at="2024-04-04T18:07:57 GMT-04:00" duration-ms="58519">
      <class name="script.InvalidLogin">
        <test-method is-config="true" signature="intReport()[pri:0, instance:script.InvalidLogin@72e5a8e]" started-at="2024-04-04T18:06:58 GMT-04:00" name="intReport" finished-at="2024-04-04T18:06:58 GMT-04:00" duration-ms="200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intReport -->
        <test-method is-config="true" signature="preCondition(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:script.InvalidLogin@72e5a8e]" started-at="2024-04-04T18:06:58 GMT-04:00" name="preCondition" finished-at="2024-04-04T18:07:03 GMT-04:00" duration-ms="4838" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[no]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://192.168.111.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[https://opensource-demo.orangehrmlive.com/]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[public void script.InvalidLogin.testInvalidLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[This is Before method...]]>
            </line>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testInvalidLogin()[pri:2, instance:script.InvalidLogin@72e5a8e]" started-at="2024-04-04T18:07:03 GMT-04:00" name="testInvalidLogin" finished-at="2024-04-04T18:07:06 GMT-04:00" duration-ms="2250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.InvalidLogin@72e5a8e]" started-at="2024-04-04T18:07:06 GMT-04:00" name="postCondition" finished-at="2024-04-04T18:07:06 GMT-04:00" duration-ms="218" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidLogin status=SUCCESS method=InvalidLogin.testInvalidLogin()[pri:2, instance:script.InvalidLogin@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:script.InvalidLogin@72e5a8e]" started-at="2024-04-04T18:07:57 GMT-04:00" name="generateReport" finished-at="2024-04-04T18:07:57 GMT-04:00" duration-ms="409" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- script.InvalidLogin -->
      <class name="script.ValidLogin">
        <test-method is-config="true" signature="preCondition(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:script.ValidLogin@771a660]" started-at="2024-04-04T18:07:06 GMT-04:00" name="preCondition" finished-at="2024-04-04T18:07:09 GMT-04:00" duration-ms="3514" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[no]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://192.168.111.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[https://opensource-demo.orangehrmlive.com/]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[public void script.ValidLogin.testValidLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[This is Before method...]]>
            </line>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method retried="true" signature="testValidLogin()[pri:1, instance:script.ValidLogin@771a660]" started-at="2024-04-04T18:07:09 GMT-04:00" name="testValidLogin" finished-at="2024-04-04T18:07:30 GMT-04:00" duration-ms="20655" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at script.ValidLogin.testValidLogin(ValidLogin.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.ValidLogin@771a660]" started-at="2024-04-04T18:07:30 GMT-04:00" name="postCondition" finished-at="2024-04-04T18:07:30 GMT-04:00" duration-ms="255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidLogin status=SKIP method=ValidLogin.testValidLogin()[pri:1, instance:script.ValidLogin@771a660] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="preCondition(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:script.ValidLogin@771a660]" started-at="2024-04-04T18:07:30 GMT-04:00" name="preCondition" finished-at="2024-04-04T18:07:34 GMT-04:00" duration-ms="3542" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[no]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://192.168.111.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[https://opensource-demo.orangehrmlive.com/]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[public void script.ValidLogin.testValidLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[This is Before method...]]>
            </line>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testValidLogin()[pri:1, instance:script.ValidLogin@771a660]" started-at="2024-04-04T18:07:34 GMT-04:00" name="testValidLogin" finished-at="2024-04-04T18:07:54 GMT-04:00" duration-ms="20678" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at script.ValidLogin.testValidLogin(ValidLogin.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:263)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.ValidLogin@771a660]" started-at="2024-04-04T18:07:55 GMT-04:00" name="postCondition" finished-at="2024-04-04T18:07:57 GMT-04:00" duration-ms="1802" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidLogin status=FAILURE method=ValidLogin.testValidLogin()[pri:1, instance:script.ValidLogin@771a660] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- script.ValidLogin -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
